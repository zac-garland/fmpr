tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))
) %>%
htmltools::html_print()
paste(as.character(parse(text = clipr::read_clip())),collapse = "\n")
paste(as.character(parse(text = clipr::read_clip())),collapse = "\n")
paste(as.character(parse(text = clipr::read_clip())),collapse = "\n") %>% clipr::write_clip()
styler:::style_selection()
source("~/.active-rstudio-document", echo=TRUE)
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_sign <- glue::glue("{scales::percent(this_return,accuracy = 0.1)}")
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", fluidRow(column(12, style = "margin-bottom:3rem;margin-top:1.1rem;", div(class = "ticker__item", style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};padding:15px;")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(69,69,69,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", fluidRow(column(12, style = "margin-bottom:3rem;margin-top:1.1rem;", div(class = "ticker__item", style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};padding:15px;")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_sign <- glue::glue("{scales::percent(this_return,accuracy = 0.1)}")
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", fluidRow(column(12, style = "margin-bottom:3rem;margin-top:1.1rem;", div(class = "ticker__item", style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};padding:15px;")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;") %>% HTML()
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}")
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", fluidRow(column(12, style = "margin-bottom:3rem;margin-top:1.1rem;", div(class = "ticker__item", style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};padding:15px;")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", fluidRow(column(12, style = "margin-bottom:3rem;margin-top:1.1rem;", div(class = "ticker__item", style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};padding:15px;")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", fluidRow(column(12, style = "margin-bottom:3rem;margin-top:1.1rem;", div(class = "ticker__item", style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(class = "ticker__item", style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div( span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};text-align:right;")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};"),align="right"), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};float:right;")), style = "font-size:1.5rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};float:right;")), style = "font-size:2rem;"), div(glue::glue("{unique(.x$company)} | {unique(.x$sector)}"), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};float:right;")), style = "font-size:2rem;"), div(HTML(glue::glue("{unique(.x$company)} <br> {unique(.x$sector)}")), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};float:right;")), style = "font-size:2rem;"), div(HTML(glue::glue("{unique(.x$company)} <br> <b>{unique(.x$sector)}</b>")), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
index <- tidyquant::tq_index("DOW")
px_data <- index %>%
nest(-symbol) %>%
mutate(px_data = map(symbol, ~ {
tidyquant::tq_get(.x, from = (Sys.Date() - 365))
}))
this_content <- px_data %>%
split(.$symbol) %>%
map(~ {
.x <- .x %>% unnest()
trend_line <- .x %>%
pull(adjusted) %>%
reactrend::reactrend(gradient = c("#00c6ff", "#F0F", "#FF0"), height = "400px", smooth = TRUE, draw = TRUE)
this_return <- .x %>%
filter(date == min(date, na.rm = TRUE) | date == max(date, na.rm = TRUE)) %>%
slice(1, nrow(.)) %>%
arrange(date) %>%
summarize(return = ((adjusted / lag(adjusted)) - 1) %>% tail(1)) %>%
pull()
this_color <- ifelse(this_return > 0, "#FF0", "#00c6ff")
this_arrow <- ifelse(this_return>0,"&#9650;","&#9660;")
this_sign <- glue::glue("{this_arrow} {scales::percent(this_return,accuracy = 0.1)}") %>% HTML()
div(class = "ticker__item", style = "margin-right:20px;min-width:300px;", div(div(style = "margin-bottom:3rem;margin-top:1.1rem;", div(style = "max-width:100% !important;margin:0 !important;", span(unique(.x$symbol), span(this_sign, style = glue::glue("color:{this_color};float:right;")), style = "font-size:2rem;"), div(HTML(glue::glue("{unique(.x$company)} <br> <b>{unique(.x$sector)}</b>")), style = "color:rgb(200,200,200,0.9);margin:1rem 0px;font-size:0.8rem;")))), fluidRow(column(12, trend_line)))
})
this_content %>%
div(class = "ticker__list") %>%
div(class = "ticker") %>%
div(class = "ticker-container") %>%
fluidPage(class = "w3-theme-d5", tags$head(
HTML("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"><link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-dark-grey.css\">"), tags$style(HTML(".ticker-container{overflow:hidden}.ticker{display:flex}.ticker__list{display:flex;margin-top:20px;animation:ticker 300s infinite linear}.ticker:hover .ticker__list{animation-play-state:paused}.ticker__item{background: transparent;box-shadow: 6px 6px 14px 0 rgba(0, 0, 0, 0.5),-8px -8px 18px 0 rgba(100, 100, 100, 0.89);border-radius: 40px;padding: 4px 30px 20px;}@-moz-keyframes ticker{100%{transform:translateX(-100%)}}@-webkit-keyframes ticker{100%{transform:translateX(-100%)}}@-o-keyframes ticker{100%{transform:translateX(-100%)}}@keyframes ticker{100%{transform:translateX(-100%)}}")),
tags$script(HTML("var ticker=document.querySelector(\".ticker\"),list=document.querySelector(\".ticker__list\"),clone=list.cloneNode(true);ticker.append(clone);"))
), ., tags$script(HTML("var body = document.body;body.classList.add('w3-theme-d5')"))) %>%
htmltools::html_print()
golem::create_golem(path.expand("~/r_projects/testgolempack"))
devtools::load_all(".")
fmp_analyst_estimates()
devtools::load_all(".")
fmp_analyst_estimates()
library(fmpr)
gert::git_add(".")
gert::git_commit_all("added estimates")
gert::git_push()
gert::git_push()
gert::git_push()
gert::git_signature_default()
libgit2::
libgit2
gitcreds::gitcreds_get()
gert::git_push()
View(fmp_data)
devtools::load_all(".")
View(fmp_data)
library(fmpr)
gert::git_add(".")
gert::git_commit_all("added default date sorting")
gert::git_push()
View(fmp_key_metrics)
devtools::load_all(".")
devtools::load_all(".")
fmp_key_metrics()
fmp_key_metrics(measure = "ttm")
devtools::load_all(".")
fmp_analyst_upgrades()
devtools::load_all(".")
fmp_analyst_upgrades()
devtools::load_all(".")
fmp_analyst_upgrades()
View(fmp_url_builder)
devtools::load_all(".")
fmp_analyst_upgrades()
library(fmpr)
gert::git_add(".")
gert::git_commit_all("added analyst upgrades")
gert::git_push()
library(fmpr)
gert::git_add(".")
gert::git_commit_all("added outstanding shares")
gert::git_push()
devtools::load_all(".")
fmp_historical_employment()
devtools::load_all(".")
fmp_historical_employment()
fmp_historical_employment() %>% glimpse()
devtools::load_all(".")
fmp_shares_float()
devtools::load_all(".")
gert::git_add(".")
gert::git_commit_all("modified share float for historical")
gert::git_push()
library(fmpr)
gert::git_add(".")
devtools::load_all(".")
fmp_historical_sentiment()
devtools::load_all(".")
fmp_historical_sentiment()
devtools::load_all(".")
fmp_historical_sentiment()
fmp_historical_sentiment() %>% glimpse()
fmp_historical_sentiment() %>% dplyr::glimpse()
library(fmpr)
gert::git_add(".")
gert::git_commit_all("added sentiment")
gert::git_push()
devtools::load_all(".")
fmp_sp500_constituents()
library(fmpr)
gert::git_add(".'")
gert::git_commit_all("added s&p500 consits")
gert::git_push()
devtools::load_all(".")
symbol = "IWF"
apikey <- fmp_api_key()
etf_holdings_dates <- fmp_url_builder("etf-holdings/portfolio-date?symbol={symbol}&apikey={apikey}",version = 4) %>%
fmp_data()
etf_holdings_dates <- fmp_url_builder(glue::glue("etf-holdings/portfolio-date?symbol={symbol}&apikey={apikey}"),version = 4) %>%
fmp_data()
etf_holdings_dates
etf_holdings_dates <- fmp_url_builder(glue::glue("etf-holdings/portfolio-date?symbol={symbol}&apikey={apikey}"),version = 4) %>%
fmp_data() %>%
dplyr::filter(date == max(date,na.rm=TRUE)) %>%
dplyr::pull()
etf_holdings_date <- fmp_url_builder(glue::glue("etf-holdings/portfolio-date?symbol={symbol}&apikey={apikey}"),version = 4) %>%
fmp_data() %>%
dplyr::filter(date == max(date,na.rm=TRUE)) %>%
dplyr::pull()
etf_holdings_date
devtools::load_all(".")
fmp_etf_holdings("IWF")
devtools::load_all(".")
fmp_etf_holdings("IWF")
.Last.value %>% glimpse()
.Last.value %>% dplyr::glimpse()
library(fmpr)
gert::git_add(".")
gert::git_commit_all("added etf holdings")
gert::git_push()
